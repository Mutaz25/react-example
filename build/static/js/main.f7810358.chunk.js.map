{"version":3,"sources":["SimpleCard.jsx","mchoice.jsx","App.jsx","index.js"],"names":["useStyles","makeStyles","root","minWidth","width","margin","padding","title","fontSize","Msg","SimpleCard","classes","Card","className","Typography","color","Divider","correctAnswer","green","IncorrectAnswer","red","Header","props","component","Fab","button","questionHeader","style","Mchoice","handleChange","event","setState","selectedValue","target","value","handleNotification","state","init","clearStyle","quiz","detail","answers","forEach","element","refsArray","id","background","chkAnswers","answer","correctAns","window","addEventListener","this","removeEventListener","Paper","variant","elevation","questionTxt","quizText","map","ans","marginTop","fontFamily","ref","Radio","name","onChange","checked","ansText","submit","Button","onClick","React","Component","withStyles","pointerEvents","boxShadow","marginLeft","display","fontWeight","marginBottom","textAlign","App","quiz$","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7810358.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    width: '50%',\r\n    margin: '0 auto',\r\n    padding: 15\r\n  },\r\n\r\n  title: {\r\n    fontSize: 16,\r\n  },\r\n  Msg: {\r\n    padding: '18px 0px 6px 0px',\r\n  },\r\n});\r\n\r\n\r\nexport default function SimpleCard() {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <Card className={classes.root}>\r\n          <Typography className={classes.title} color=\"textSecondary\" >\r\n            Quiz Preview\r\n          </Typography>\r\n          <Divider/>\r\n          <Typography className={classes.Msg} color=\"textSecondary\">\r\n            Enter the question & answers then press on [Generate] button\r\n          </Typography>\r\n       \r\n          \r\n      </Card>\r\n    );\r\n  }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Paper, Typography, Button, Radio, Fab} from '@material-ui/core';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport red from '@material-ui/core/colors/red';\r\nimport green from '@material-ui/core/colors/green';\r\nimport SimpleCard from './SimpleCard';\r\n\r\nconst styles = {\r\n    root: {\r\n      padding: 16,\r\n      marginTop: '10px',\r\n      width: \"70%\",\r\n      margin: \"0 auto\"\r\n    },\r\n    button:{\r\n      pointerEvents: \"none\",\r\n      boxShadow: \"none\"\r\n    },\r\n    questionHeader:{\r\n      marginLeft: 10,\r\n      display: \"inline\",\r\n      fontSize: \"1.5rem\",\r\n      fontFamily: \"'Caveat', cursive\",\r\n      fontWeight: \"600\"\r\n\r\n    },\r\n    questionTxt: {\r\n        fontSize: \"2rem\",\r\n        marginBottom: \"30px\",\r\n        fontFamily:'\"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\", sans-serif'\r\n    },\r\n    submit:{\r\n      marginTop: \"30px\",\r\n      textAlign: \"center\"\r\n    }\r\n  };\r\n\r\n  const correctAnswer = green[300];\r\n  const IncorrectAnswer = red[300];\r\n\r\nfunction Header(props){\r\n    return (\r\n            <div>\r\n                <Typography component=\"p\">\r\n                <Fab color=\"primary\" className={props.button}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n                <span className={props.questionHeader}> Question by React & Material UI</span>\r\n        \r\n                </Typography>\r\n\r\n                <hr style={{margin: \"20px 0\"}}/>\r\n            </div>);\r\n}\r\n\r\nclass Mchoice extends React.Component {\r\n\r\n    constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      quiz: props.quiz,\r\n      selectedValue: '',\r\n      init:'1'\r\n    }\r\n    this.refsArray = [];\r\n\r\n    }\r\n    \r\n    \r\n\r\n    handleChange = event => {\r\n        this.setState({ selectedValue: event.target.value });\r\n    };\r\n        \r\n    handleNotification = event => {\r\n        if (this.state.init !== '1') {\r\n            this.clearStyle();\r\n        }\r\n        \r\n        \r\n        this.setState({quiz: [event.detail], selectedValue: '', init:0});\r\n    }\r\n        \r\n    componentDidMount() {\r\n\r\n        window.addEventListener('pushed', this.handleNotification)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('pushed', this.handleNotification)\r\n    }\r\n\r\n    clearStyle = () =>{\r\n     \r\n      this.state.quiz[0].answers.forEach(element => {\r\n          \r\n        this.refsArray[element.id].style.background = \"transparent\";\r\n\r\n      });\r\n    \r\n    }\r\n\r\n    chkAnswers = () => {\r\n     \r\n    var answer = this.state.quiz[0].correctAns;\r\n      \r\n      this.clearStyle()\r\n\r\n      if(this.state.selectedValue === answer){\r\n        this.refsArray[answer].style.background = correctAnswer;\r\n      }else{\r\n        this.refsArray[answer].style.background = correctAnswer;\r\n        this.refsArray[this.state.selectedValue].style.background = IncorrectAnswer;\r\n      }\r\n    }\r\n\r\n      render(){\r\n     \r\n        if (this.state.init === '1') {\r\n            return (\r\n                <div>\r\n\r\n                <Paper className={this.props.classes.root} variant=\"outlined\" elevation={4}>\r\n\r\n                   <Header button={this.props.classes.button} questionHeader={this.props.classes.questionHeader} />\r\n\r\n                   <SimpleCard />\r\n                 </Paper>\r\n\r\n                </div>\r\n\r\n            );\r\n\r\n\r\n        }else {\r\n\r\n            return (\r\n\r\n                <div>\r\n                  \r\n                  <Paper className={this.props.classes.root} variant=\"outlined\" elevation={4}>\r\n\r\n                    \r\n                    <Header button={this.props.classes.button} questionHeader={this.props.classes.questionHeader} />\r\n\r\n        \r\n                    <Typography component=\"h1\" className={this.props.classes.questionTxt}>\r\n                      {this.state.quiz[0].quizText}\r\n                    </Typography>\r\n            \r\n                    {this.state.quiz[0].answers.map((ans)=>(\r\n                      <div key={ans.id} style={{marginTop: \"5px\",fontSize:\"1rem\" , fontFamily:'\"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\", sans-serif'}}  \r\n                      ref={ref => { \r\n                        this.refsArray[ans.id] = ref; \r\n                      }} >\r\n        \r\n                        <Radio\r\n    \r\n                        name=\"radio-button-group\"\r\n                        value={ans.id}\r\n                        onChange={this.handleChange}\r\n                        checked={this.state.selectedValue === ans.id}\r\n        \r\n                        />\r\n                      {ans.ansText}\r\n                      </div>\r\n        \r\n                    ))}\r\n        \r\n                   \r\n                    <div className={this.props.classes.submit}>\r\n                     <Button onClick={this.chkAnswers} variant=\"contained\" color=\"secondary\" >\r\n                        Submit\r\n                    </Button>\r\n                 \r\n                    </div>\r\n                  </Paper>\r\n                </div>\r\n              );\r\n    \r\n\r\n        }\r\n      \r\n       \r\n            \r\n      \r\n\r\n      }\r\n    }\r\n\r\n    Mchoice.propTypes = {\r\n        classes: PropTypes.object.isRequired,\r\n      };\r\n \r\n    // export default Mchoice;\r\n    export default withStyles(styles)(Mchoice);\r\n","import React, {Component} from 'react';\r\nimport Mchoice from './mchoice'\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        quiz : window.quiz$\r\n        \r\n      };\r\n\r\n    } \r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n     \r\n\r\n            <Mchoice quiz={this.state.quiz} />\r\n\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}